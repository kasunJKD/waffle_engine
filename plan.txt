allocator logic 

-> Arena allocations
  -> Permanant arena for texture ids , sounds etc 

-> Transient allocations =>  
  -> Level based or room based data
  -> area based renders


  stacks 
  ring buffers
  free list pool -> (bitmap allocator)

|||||save data structure plan||||||

save files -> 
    1. all entity info + shaders path + textures path + etc 
    2. save file + state changes 

1. 
[texture path]
./assets/blah.png

[shader path]
./assets/blah.vert .frag

[entities]
id-1
postion-0.1 0.1 0.2
type-0
etc..

2.
[entities]
id-1

[trigger]
type-0
active-1


//EDITOR
screens ->
  Entity Selection screen
    Set Animations
    Set Positions
    Set Collisions
  
  DrawTool
    DrawTiles
    Set Tiles with animation players (frame, count, direction , size)

  All Entity

  Trigger sets

  Enemies

TODO
1.DrawSprites ----> done
2.Lights -> light renders https://www.slembcke.net/blog/2DLightingTechniques/
  Normal mapping -> handmadehero
3.Zbuffer (depth buffer) ---> done -> (bug :: inverted depth z higher z means closer)
  editor-> remove ortho , add perspective
4.Collisions system-> add debug draw lines + draw collision lines in debug mode  
5.Animation types -> STATE machine, AUTO PLAY

//rewrite
editor -> perspective cam
game -> ortho camera
make the camera/cameras independent (not entities)




